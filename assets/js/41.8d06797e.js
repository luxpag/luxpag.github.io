(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{425:function(t,e,a){"use strict";a.r(e);var n=a(54),i=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"id-for-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id-for-test"}},[t._v("#")]),t._v(" ID for Test")]),t._v(" "),a("h3",{attrs:{id:"certificate-rule-verification-javascript-library"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#certificate-rule-verification-javascript-library"}},[t._v("#")]),t._v(" Certificate rule verification JavaScript Library")]),t._v(" "),a("p",[a("a",{attrs:{target:"_blank",href:"https://res.luxpag.com/lib/js/luxpagSDK.min.js"}},[t._v("luxpagSDK.min.js")]),t._v(" can be used for certificate formatting and compliance 。")]),t._v(" "),a("h3",{attrs:{id:"steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[t._v("#")]),t._v(" steps")]),t._v(" "),a("h4",{attrs:{id:"_1-reference-luxpagsdk-min-js-to-your-payment-page"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-reference-luxpagsdk-min-js-to-your-payment-page"}},[t._v("#")]),t._v(" 1. Reference luxpagSDK.min.js to your payment page")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script src="https://res.luxpag.com/lib/js/luxpagSDK.min.js"><\/script>\n')])])]),a("h4",{attrs:{id:"_2-parameter-validation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-parameter-validation"}},[t._v("#")]),t._v(" 2. Parameter Validation")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("参数2")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("返回")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("formatId(value, code)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) Id to be formatted")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) ISO 3166, 3 digit country code (MEX, CHL, COL, PER, ECU, BRA, PAN, CRI, SLV, GTM, NIC)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) formatted id")]),t._v(" "),a("td",[t._v("IDs can beformatted: (CPF/CNPJ, RFC, NIT/CC, RUT/RUN, DNI/RUC, RUC, CIP, DUI, DPI)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("validateId(value, code)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) Id to be validated")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) ISO 3166, 3 digit country code (MEX, CHL, COL, PER, ECU, BRA, PAN, CRI, SLV, GTM, NIC)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(list) [isIdvalid (boolean), idType (string) ]")]),t._v(" "),a("td",[t._v("IDs can bevalidated: CPF/CNPJ, RFC, NIT/CC, RUT/RUN, DNI/RUC, RUC, CIP, DUI, DPI")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("validateName(value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) name to be validated")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("​")]),t._v(" "),a("td",[t._v("Only canbeused in MEX, CHL, COL, PER, ECU, BRA, PAN, CRI, SLV, GTM, NIC")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("validateEmail(value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) email to be validated")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(boolean) true/false")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("formatCEP(value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) CEP (zip code) to be formatted")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) formatted CEP (zip code)")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("validateCEP(value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) CEP to be validated")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(boolean) true/false")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("clearData(value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) Data to be cleared in order to get rid of unnecessary characters (-/.).")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) cleared data")]),t._v(" "),a("td",[t._v("Before theAPI request formattedparameters must be cleared")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("formatPostalCode(valu e, code)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) zip code to be formatted")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) ISO 3166, 3 digit country code (MEX, CHL, COL, PER, BRA)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),a("td",[t._v("formatted CEP(zip code).")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("validatePostalCode(val ue, code)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) zip code to be formatted")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(string) ISO 3166, 3 digit country code (MEX, CHL, COL, PER, BRA)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),a("td",[t._v("validated CEP(zip code).")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-for-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-for-example"}},[t._v("#")]),t._v(" 3. for example：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('https://res.luxpag.com/lib/sdkExample.html\n\nluxpagSDK.formatId("50284414727","BRA") // 502.844.147-27\nluxpagSDK.validateId("502.844.147-27", "BRA") // [true, \'CPF\']\nluxpagSDK.clearData("502.844.147-27") // 50284414727\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script type="text/javascript" src="https://res.luxpag.com/lib/js/jquery-1.10.2.min.js"><\/script> \n<script type="text/javascript" src="https://res.luxpag.com/lib/js/luxpagSDK.min.js"><\/script>\n\n    <label for="">RFC: </label>\n    <input type="text" id="input-rfc" /> <button id="submit-mx-id">Submit RFC</button>\n    <br />\n\n    <br />\n    <label for="">CPF/CNPJ: </label>\n    <input type="text" id="input-br-id" /> <button id="submit-br-id">Submit CPF/CNPJ</button>\n    <br />\n\n    <br />\n    <label for="">CEP: </label>\n    <input type="text" id="input-cep" /> <button id="submit-cep">Submit CEP</button>\n    <br />\n\n    <br />\n    <label for="">Postal code: </label>\n    <select id="countries">\n      <option value="BRA">Brasil</option>\n      <option value="MEX">Mexico</option>\n      <option value="CHL">Chile</option>\n      <option value="COL">Colombia</option>\n      <option value="PER">Peru</option>\n    </select>\n    <input type="text" id="input-postal-code" /> <button id="submit-postal-code">Submit Postal Code</button>\n    <br />\n\n    <script type="87f1b3200af765c0f2113510-text/javascript" charset="utf-8">\n      $("#input-rfc").on("input", (e) => {\n        const value = e.target.value;\n        const idNode = $("#input-rfc");\n\n        const formattedId = luxpagSDK.formatId(value, "MEX");\n        idNode.val(formattedId);\n\n        const [isIdvalid, idType] = luxpagSDK.validateId(idNode.val(), "MEX");\n\n        if (isIdvalid === true) {\n          idNode.removeClass("error");\n        } else {\n          idNode.addClass("error");\n        }\n      });\n      $("#submit-mx-id").click(() => {\n        const idNode = $("#input-rfc");\n        const [isIdvalid, idType] = luxpagSDK.validateId(idNode.val(), "MEX");\n        if (isIdvalid === true) {\n          const requestData = {\n            customer: {\n              identify: {\n                number: luxpagSDK.clearData(idNode.val()),\n                type: idType,\n              }, // .....\n            },\n          };\n\n          window.alert(JSON.stringify(requestData));\n        }\n      });\n\n      $("#input-br-id").on("input", (e) => {\n        const value = e.target.value;\n        const idNode = $("#input-br-id");\n\n        const formattedId = luxpagSDK.formatId(value, "BRA");\n        idNode.val(formattedId);\n\n        const [isIdvalid, idType] = luxpagSDK.validateId(idNode.val(), "BRA");\n        if (isIdvalid === true) {\n          idNode.removeClass("error");\n        } else {\n          idNode.addClass("error");\n        }\n      });\n      $("#submit-br-id").click(() => {\n        const idNode = $("#input-br-id");\n        const [isIdvalid, idType] = luxpagSDK.validateId(idNode.val(), "BRA");\n        if (isIdvalid === true) {\n          const requestData = {\n            customer: {\n              identify: {\n                number: luxpagSDK.clearData(idNode.val()),\n                type: idType,\n              }, // .....\n            },\n          };\n\n          window.alert(JSON.stringify(requestData));\n        }\n      });\n\n      $("#input-cep").on("input", (e) => {\n        const value = e.target.value;\n        const cepNode = $("#input-cep");\n\n        const formattedCep = luxpagSDK.formatCEP(value);\n        cepNode.val(formattedCep);\n\n        const isCepValid = luxpagSDK.validateCEP(cepNode.val());\n        if (isCepValid === true) {\n          cepNode.removeClass("error");\n        } else {\n          cepNode.addClass("error");\n        }\n      });\n      $("#submit-cep").click(() => {\n        const cepNode = $("#input-cep");\n        const isCepValid = luxpagSDK.validateCEP(cepNode.val());\n        if (isCepValid === true) {\n          const requestData = {\n            customer: {\n              address: {\n                zip_code: luxpagSDK.clearData(cepNode.val()),\n              },\n            },\n          };\n\n          window.alert(JSON.stringify(requestData));\n        }\n      });\n\n      $("#input-postal-code").on("input", (e) => {\n        const value = e.target.value;\n        const postalCodeNode = $("#input-postal-code");\n        const countryCodeNode = $("#countries");\n        const formattedPostalCode = luxpagSDK.formatPostalCode(value, countryCodeNode.val());\n        postalCodeNode.val(formattedPostalCode);\n        console.log("formattedPostalCode", formattedPostalCode);\n\n        const isPostalCodeValid = luxpagSDK.validatePostalCode(postalCodeNode.val(), countryCodeNode.val());\n        console.log("isPostalCodeValid", isPostalCodeValid);\n        if (isPostalCodeValid === true) {\n          postalCodeNode.removeClass("error");\n        } else {\n          postalCodeNode.addClass("error");\n        }\n      });\n\n      $("#submit-postal-code").click(() => {\n        const countryCodeNode = $("#countries");\n        const postalCodeNode = $("#input-postal-code");\n        const isPostalCodeValid = luxpagSDK.validatePostalCode(postalCodeNode.val(), countryCodeNode.val());\n        if (isPostalCodeValid === true) {\n          const requestData = {\n            customer: {\n              address: {\n                zip_code: luxpagSDK.clearData(postalCodeNode.val()),\n              },\n            },\n          };\n\n          window.alert(JSON.stringify(requestData));\n        }\n      });\n\n      $("#countries").change((e) => {\n        countryCode = e.target.value;\n        const postalCodeNode = $("#input-postal-code");\n        const isPostalCodeValid = luxpagSDK.validatePostalCode(postalCodeNode.val(), countryCode);\n        if (isPostalCodeValid === true) {\n          postalCodeNode.removeClass("error");\n        } else {\n          postalCodeNode.addClass("error");\n        }\n      });\n    <\/script>\n')])])])])}),[],!1,null,null,null);e.default=i.exports}}]);